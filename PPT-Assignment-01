Q.1 Two Sum
code:-
int nums[] = { 2, 7, 11, 15 };
      int target = 17;
      for (int i = 0; i < nums.length; i++) {
         for (int j = i + 1; j <= nums.length - 1; j++) {
            if (nums[i] + nums[j] == target) {
               System.out.println("(" + i + "," + j + ")");
            }
         }
      }



Q.2 Remove Element
Code:-

 public static int removeElement(int nums1[], int val) {
      int k = 0;
      for (int i = 0; i < nums1.length; i++) {
         if (nums1[i] != val) {
            nums1[k] = nums1[i];
            k++;
         }

      }
      return k;
   }

Function Call:-
int nums1[] = { 3, 2, 2, 3 };
      int val = 3;
      int result = removeElement(nums1, val);
      for (int i = 0; i < result; i++) {
         System.out.println(nums1[i] + " ");
      }
      System.out.println(result + " total");



Q.3 Search Insert Position
Code:-
  int nums2[] = { 1, 3, 5, 6 };
      int target2 = 6;
      for (int i = 0; i < nums2.length; i++) {
         if (nums2[i] == target2) {
            System. out.print("Target number index is : " + i);
         }
      }


Q.4 plusOne
Code:-

 public static int[] plusOne(int digits[]) {
      int n = digits.length - 1;

      for (int i = n; i >= 0; i--) {
         if (digits[i] < 9) { // if number is less then 9.
            digits[i]++; // add plus 1
            return digits;
         } else {
            digits[n] = 0; // if number is grater then or equal to 9 then 9 ==0.
         }
      }
      // If all digits are 9
      int newDigits[] = new int[n + 1]; // create new array for store new digit
      newDigits[0] = 1; // add 1 to the first index.
      return newDigits;
   }


Function Call:-

   int digits[] = { 9, 9, 9, 9 };
      int resultDigit[] = plusOne(digits);
      for (int digit: resultDigit) {

         System.out.println(digit);
      }






Q.5  Merge Sort two sorted array
code:-

      int nums1[] = { 1, 2, 3, 0, 0, 0 };
      int m = 3;
      int nums2[] = { 2, 5, 6 };
      int n = 3;
      int num[] = new int[m + n];
      int k = 0; // for tracking 3rd index.

      for (int i = 0; i < m; i++) {
         num[k++] = nums1[i];

      }
      for (int j = 0; j < n; j++) {
         num[k++] = nums2[j];
      }

      Arrays.sort(num);

      System.out.println(Arrays.toString(num));



Q.6  Check Twice
Code:-
   public static boolean twice(int num[]) {
      int n = num.length;
      if (n == 0) {
         return false;
      }
      for (int i = 0; i < n; i++) {
         for (int j = i + 1; j < n; j++) {
            if (num[i] == num[j]) {
               return true;
            }
         }
      }
      return false;
   }

Function Call:-

  int num[] = { 1, 2, 8, 5, 8 };
      System.out.println("Twice Num in array is : ");
      System.out.println(twice(num));




Q.7  Move Zero
Code:-


   public static void moveZero(int num2[]) {
      int n = num2.length;
      /// First decide the insert point with initialize withe zero
      int startPoint = 0;
      // Run a loop over array
      for (int i = 0; i < n; i++) {
         if (num2[i] != 0) {// Check condition if num2 index value is not have zero
            num2[startPoint] = num2[i]; // assign the value starting point of arry.
            startPoint++; // after assigning then increment starting point by one

         }

      }
      while (startPoint < num2.length) { // while starting point index is less than the array's length.
         num2[startPoint++] = 0; // at the time update the startPoint also
      }

   }


Function Call:-

   int num2[] = { 0, 1, 0, 3, 12 };
      moveZero(num2);
      for (int i = 0; i < num2.length; i++) {
         System.out.print(num2[i] + " ");
      }



Q.8 Set Mismatch

//Sorry for not complete this problem is i am not unable to complete.


